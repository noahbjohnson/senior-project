
Urbanization Data Processing (UNPD)
===================================

Data Dictionary
---------------

+---------------------+-------------------------------------------------------------------------------------+
| Code                | Indicator Name                                                                      |
+=====================+=====================================================================================+
| SP.URB.TOTL.IN.ZS   | Urban population (% of total)                                                       |
+---------------------+-------------------------------------------------------------------------------------+
| SP.URB.GROW         | Urban population growth (annual %)                                                  |
+---------------------+-------------------------------------------------------------------------------------+
| EN.POP.SLUM.UR.ZS   | Population living in slums (% of urban population)                                  |
+---------------------+-------------------------------------------------------------------------------------+
| EN.URB.MCTY.TL.ZS   | Population in urban agglomerations of more than 1 million (% of total population)   |
+---------------------+-------------------------------------------------------------------------------------+
| EN.URB.LCTY.UR.ZS   | Population in the largest city (% of urban population)                              |
+---------------------+-------------------------------------------------------------------------------------+

.. code:: ipython3

    import re
    
    import numpy as np
    import pandas as pd
    import pycountry
    
    %matplotlib inline
    
    pd.set_option('display.float_format', lambda x: '%.3f' % x)

Load The File
-------------

.. code:: ipython3

    df = pd.read_excel("../data/external/Urbanization/UNPD/Data_Extract_From_World_Development_Indicators.xlsx")

.. code:: ipython3

    df.sample(5)




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>Time</th>
          <th>Time Code</th>
          <th>Country Name</th>
          <th>Country Code</th>
          <th>Urban population (% of total) [SP.URB.TOTL.IN.ZS]</th>
          <th>Urban population growth (annual %) [SP.URB.GROW]</th>
          <th>Population living in slums (% of urban population) [EN.POP.SLUM.UR.ZS]</th>
          <th>Population in urban agglomerations of more than 1 million (% of total population) [EN.URB.MCTY.TL.ZS]</th>
          <th>Population in the largest city (% of urban population) [EN.URB.LCTY.UR.ZS]</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>3349</th>
          <td>2006</td>
          <td>YR2006</td>
          <td>Somalia</td>
          <td>SOM</td>
          <td>37.100</td>
          <td>5.069</td>
          <td>..</td>
          <td>13.724</td>
          <td>36.992</td>
        </tr>
        <tr>
          <th>994</th>
          <td>1997</td>
          <td>YR1997</td>
          <td>Turks and Caicos Islands</td>
          <td>TCA</td>
          <td>81.890</td>
          <td>4.643</td>
          <td>..</td>
          <td>..</td>
          <td>..</td>
        </tr>
        <tr>
          <th>1748</th>
          <td>2000</td>
          <td>YR2000</td>
          <td>Portugal</td>
          <td>PRT</td>
          <td>54.399</td>
          <td>1.916</td>
          <td>..</td>
          <td>38.158</td>
          <td>47.743</td>
        </tr>
        <tr>
          <th>6048</th>
          <td>2016</td>
          <td>YR2016</td>
          <td>Latin America &amp; the Caribbean (IDA &amp; IBRD coun...</td>
          <td>TLA</td>
          <td>80.156</td>
          <td>1.414</td>
          <td>..</td>
          <td>37.308</td>
          <td>22.531</td>
        </tr>
        <tr>
          <th>4309</th>
          <td>2010</td>
          <td>YR2010</td>
          <td>Gabon</td>
          <td>GAB</td>
          <td>85.533</td>
          <td>3.991</td>
          <td>..</td>
          <td>..</td>
          <td>46.230</td>
        </tr>
      </tbody>
    </table>
    </div>



Standardize Country Codes
-------------------------

.. code:: ipython3

    """ Only Select rows with valid country codes
    """
    country_locations = []
    for country in df['Country Code']:
        try:
            pycountry.countries.lookup(country)
            country_locations.append(True)
        except LookupError:
            country_locations.append(False)
    df = df[country_locations]

Standardize Indexes
-------------------

.. code:: ipython3

    df.rename(
        {
            "Time": "Year"
        },
        axis='columns',
        inplace=True)

.. code:: ipython3

    df.set_index(["Country Code", "Year"], inplace=True)

Clean Data
----------

Header
~~~~~~

.. code:: ipython3

    df.drop(["Time Code", "Country Name"],
            axis='columns',
            inplace=True)

.. code:: ipython3

    c = [ re.search(r"\[(\w+\.)+\w+\]",d)[0].replace("[","").replace("]","") for d in df.columns ]

.. code:: ipython3

    c_names = {}
    for x in range(len(c)):
        c_names[df.columns[x]] = c[x]

.. code:: ipython3

    df.rename(c_names,axis='columns',inplace=True)

Data Types
~~~~~~~~~~

.. code:: ipython3

    """ Replace '..' with np.nan for better parsing
    """
    df = df.replace('..', np.NaN)

.. code:: ipython3

    df = df.astype(float)

.. code:: ipython3

    df.sample(5)




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th></th>
          <th>SP.URB.TOTL.IN.ZS</th>
          <th>SP.URB.GROW</th>
          <th>EN.POP.SLUM.UR.ZS</th>
          <th>EN.URB.MCTY.TL.ZS</th>
          <th>EN.URB.LCTY.UR.ZS</th>
        </tr>
        <tr>
          <th>Country Code</th>
          <th>Year</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>ARE</th>
          <th>1995</th>
          <td>78.319</td>
          <td>4.841</td>
          <td>nan</td>
          <td>55.266</td>
          <td>33.879</td>
        </tr>
        <tr>
          <th>UGA</th>
          <th>2000</th>
          <td>14.786</td>
          <td>6.031</td>
          <td>75.000</td>
          <td>5.129</td>
          <td>34.691</td>
        </tr>
        <tr>
          <th>CUB</th>
          <th>2011</th>
          <td>76.689</td>
          <td>0.310</td>
          <td>nan</td>
          <td>18.809</td>
          <td>24.526</td>
        </tr>
        <tr>
          <th>NLD</th>
          <th>2004</th>
          <td>81.514</td>
          <td>1.797</td>
          <td>nan</td>
          <td>12.391</td>
          <td>7.678</td>
        </tr>
        <tr>
          <th>NCL</th>
          <th>2000</th>
          <td>61.919</td>
          <td>2.485</td>
          <td>nan</td>
          <td>nan</td>
          <td>nan</td>
        </tr>
      </tbody>
    </table>
    </div>



Save Data
---------

.. code:: ipython3

    df.to_pickle("../data/processed/Urbanization_UNPD.pickle")
