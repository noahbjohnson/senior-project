
Urbanization Data Processing (UNPD)
===================================

Data Dictionary
---------------

+---------------------+-------------------------------------------------------------------------------------+
| Code                | Indicator Name                                                                      |
+=====================+=====================================================================================+
| SP.URB.TOTL.IN.ZS   | Urban population (% of total)                                                       |
+---------------------+-------------------------------------------------------------------------------------+
| SP.URB.GROW         | Urban population growth (annual %)                                                  |
+---------------------+-------------------------------------------------------------------------------------+
| EN.POP.SLUM.UR.ZS   | Population living in slums (% of urban population)                                  |
+---------------------+-------------------------------------------------------------------------------------+
| EN.URB.MCTY.TL.ZS   | Population in urban agglomerations of more than 1 million (% of total population)   |
+---------------------+-------------------------------------------------------------------------------------+
| EN.URB.LCTY.UR.ZS   | Population in the largest city (% of urban population)                              |
+---------------------+-------------------------------------------------------------------------------------+

.. code:: ipython3

    import re
    
    import numpy as np
    import pandas as pd
    import pycountry
    
    %matplotlib inline
    
    pd.set_option('display.float_format', lambda x: '%.3f' % x)

Load The File
-------------

.. code:: ipython3

    df = pd.read_excel("../data/external/Urbanization/UNPD/Data_Extract_From_World_Development_Indicators.xlsx")

.. code:: ipython3

    df.sample(5)




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>Time</th>
          <th>Time Code</th>
          <th>Country Name</th>
          <th>Country Code</th>
          <th>Urban population (% of total) [SP.URB.TOTL.IN.ZS]</th>
          <th>Urban population growth (annual %) [SP.URB.GROW]</th>
          <th>Population living in slums (% of urban population) [EN.POP.SLUM.UR.ZS]</th>
          <th>Population in urban agglomerations of more than 1 million (% of total population) [EN.URB.MCTY.TL.ZS]</th>
          <th>Population in the largest city (% of urban population) [EN.URB.LCTY.UR.ZS]</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>3052</th>
          <td>2005</td>
          <td>YR2005</td>
          <td>New Zealand</td>
          <td>NZL</td>
          <td>86.341</td>
          <td>1.198</td>
          <td>..</td>
          <td>30.066</td>
          <td>34.822</td>
        </tr>
        <tr>
          <th>1093</th>
          <td>1998</td>
          <td>YR1998</td>
          <td>Belize</td>
          <td>BLZ</td>
          <td>45.793</td>
          <td>3.384</td>
          <td>..</td>
          <td>..</td>
          <td>..</td>
        </tr>
        <tr>
          <th>661</th>
          <td>1996</td>
          <td>YR1996</td>
          <td>Marshall Islands</td>
          <td>MHL</td>
          <td>67.058</td>
          <td>1.247</td>
          <td>..</td>
          <td>..</td>
          <td>..</td>
        </tr>
        <tr>
          <th>5444</th>
          <td>2014</td>
          <td>YR2014</td>
          <td>Portugal</td>
          <td>PRT</td>
          <td>62.936</td>
          <td>0.393</td>
          <td>..</td>
          <td>40.044</td>
          <td>43.826</td>
        </tr>
        <tr>
          <th>4106</th>
          <td>2009</td>
          <td>YR2009</td>
          <td>Nepal</td>
          <td>NPL</td>
          <td>16.434</td>
          <td>3.019</td>
          <td>58.100</td>
          <td>3.466</td>
          <td>21.091</td>
        </tr>
      </tbody>
    </table>
    </div>



Standardize Country Codes
-------------------------

.. code:: ipython3

    """ Only Select rows with valid country codes
    """
    country_locations = []
    for country in df['Country Code']:
        try:
            pycountry.countries.lookup(country)
            country_locations.append(True)
        except LookupError:
            country_locations.append(False)
    df = df[country_locations]

Standardize Indexes
-------------------

.. code:: ipython3

    df.rename(
        {
            "Time": "Year"
        },
        axis='columns',
        inplace=True)

.. code:: ipython3

    df.set_index(["Country Code", "Year"], inplace=True)

Clean Data
----------

Header
~~~~~~

.. code:: ipython3

    df.drop(["Time Code", "Country Name"],
            axis='columns',
            inplace=True)

.. code:: ipython3

    c = [ re.search(r"\[(\w+\.)+\w+\]",d)[0].replace("[","").replace("]","") for d in df.columns ]

.. code:: ipython3

    c_names = {}
    for x in range(len(c)):
        c_names[df.columns[x]] = c[x]

.. code:: ipython3

    df.rename(c_names,axis='columns',inplace=True)

Data Types
~~~~~~~~~~

.. code:: ipython3

    """ Replace '..' with np.nan for better parsing
    """
    df = df.replace('..', np.NaN)

.. code:: ipython3

    df = df.astype(float)

.. code:: ipython3

    df.sample(5)




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th></th>
          <th>SP.URB.TOTL.IN.ZS</th>
          <th>SP.URB.GROW</th>
          <th>EN.POP.SLUM.UR.ZS</th>
          <th>EN.URB.MCTY.TL.ZS</th>
          <th>EN.URB.LCTY.UR.ZS</th>
        </tr>
        <tr>
          <th>Country Code</th>
          <th>Year</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>HKG</th>
          <th>2013</th>
          <td>100.000</td>
          <td>0.402</td>
          <td>nan</td>
          <td>99.578</td>
          <td>99.578</td>
        </tr>
        <tr>
          <th>MKD</th>
          <th>1994</th>
          <td>59.794</td>
          <td>0.727</td>
          <td>nan</td>
          <td>nan</td>
          <td>37.502</td>
        </tr>
        <tr>
          <th>SDN</th>
          <th>1998</th>
          <td>32.390</td>
          <td>2.471</td>
          <td>nan</td>
          <td>12.814</td>
          <td>39.561</td>
        </tr>
        <tr>
          <th>DJI</th>
          <th>2002</th>
          <td>76.624</td>
          <td>1.887</td>
          <td>nan</td>
          <td>nan</td>
          <td>73.222</td>
        </tr>
        <tr>
          <th>TKM</th>
          <th>2005</th>
          <td>47.052</td>
          <td>1.595</td>
          <td>nan</td>
          <td>nan</td>
          <td>26.445</td>
        </tr>
      </tbody>
    </table>
    </div>



Save Data
---------

.. code:: ipython3

    df.to_pickle("../data/processed/Urbanization_UNPD.pickle")
