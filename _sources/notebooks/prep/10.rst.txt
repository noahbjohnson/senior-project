
Labor Data Processing (WDI/ILO)
===============================

Data Dictionary
---------------

+--------------------------------+-------------------------------------------------------------------------------------------------+
| **Code**                       | **Indicator Name**                                                                              |
+================================+=================================================================================================+
| SL.TLF.ACTI.1524.FE.ZS         | Labor force participation rate for ages 15-24, female (%) (modeled ILO estimate)                |
+--------------------------------+-------------------------------------------------------------------------------------------------+
| SL.TLF.CACT.ZS                 | Labor force participation rate, total (% of total population ages 15+) (modeled ILO estimate)   |
+--------------------------------+-------------------------------------------------------------------------------------------------+
| SL.TLF.CACT.FM.ZS              | Ratio of female to male labor force participation rate (%) (modeled ILO estimate)               |
+--------------------------------+-------------------------------------------------------------------------------------------------+
| SL.TLF.0714.SW.TM              | Average working hours of children, study and work, ages 7-14 (hours per week)                   |
+--------------------------------+-------------------------------------------------------------------------------------------------+
| SL.TLF.0714.WK.TM              | Average working hours of children, working only, ages 7-14 (hours per week)                     |
+--------------------------------+-------------------------------------------------------------------------------------------------+
| SL.EMP.MPYR.ZS                 | Employers, total (% of total employment) (modeled ILO estimate)                                 |
+--------------------------------+-------------------------------------------------------------------------------------------------+
| SL.AGR.EMPL.ZS                 | Employment in agriculture (% of total employment) (modeled ILO estimate)                        |
+--------------------------------+-------------------------------------------------------------------------------------------------+
| SL.IND.EMPL.ZS                 | Employment in industry (% of total employment) (modeled ILO estimate)                           |
+--------------------------------+-------------------------------------------------------------------------------------------------+
| SL.SRV.EMPL.ZS                 | Employment in services (% of total employment) (modeled ILO estimate)                           |
+--------------------------------+-------------------------------------------------------------------------------------------------+
| SL.ISV.IFRM.ZS                 | Informal employment (% of total non-agricultural employment)                                    |
+--------------------------------+-------------------------------------------------------------------------------------------------+
| SL.UEM.TOTL.ZS                 | Unemployment, total (% of total labor force) (modeled ILO estimate)                             |
+--------------------------------+-------------------------------------------------------------------------------------------------+
| SL.EMP.SELF.ZS                 | Self-employed, total (% of total employment) (modeled ILO estimate)                             |
+--------------------------------+-------------------------------------------------------------------------------------------------+
| per\_lm\_alllm.cov\_pop\_tot   | Coverage of unemployment benefits and ALMP (% of population)                                    |
+--------------------------------+-------------------------------------------------------------------------------------------------+

.. code:: ipython3

    import re
    
    import numpy as np
    import pandas as pd
    import pycountry
    
    %matplotlib inline
    
    pd.set_option('display.float_format', lambda x: '%.3f' % x)

Load The File
-------------

.. code:: ipython3

    df = pd.read_excel("../data/external/Labor/WDI/Data_Extract_From_World_Development_Indicators.xlsx")

.. code:: ipython3

    df.sample(5)




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>Time</th>
          <th>Time Code</th>
          <th>Country Name</th>
          <th>Country Code</th>
          <th>Labor force participation rate for ages 15-24, female (%) (modeled ILO estimate) [SL.TLF.ACTI.1524.FE.ZS]</th>
          <th>Labor force participation rate, total (% of total population ages 15+) (modeled ILO estimate) [SL.TLF.CACT.ZS]</th>
          <th>Ratio of female to male labor force participation rate (%) (modeled ILO estimate) [SL.TLF.CACT.FM.ZS]</th>
          <th>Average working hours of children, study and work, ages 7-14 (hours per week) [SL.TLF.0714.SW.TM]</th>
          <th>Average working hours of children, working only, ages 7-14 (hours per week) [SL.TLF.0714.WK.TM]</th>
          <th>Employers, total (% of total employment) (modeled ILO estimate) [SL.EMP.MPYR.ZS]</th>
          <th>Employment in agriculture (% of total employment) (modeled ILO estimate) [SL.AGR.EMPL.ZS]</th>
          <th>Employment in industry (% of total employment) (modeled ILO estimate) [SL.IND.EMPL.ZS]</th>
          <th>Employment in services (% of total employment) (modeled ILO estimate) [SL.SRV.EMPL.ZS]</th>
          <th>Informal employment (% of total non-agricultural employment) [SL.ISV.IFRM.ZS]</th>
          <th>Unemployment, total (% of total labor force) (modeled ILO estimate) [SL.UEM.TOTL.ZS]</th>
          <th>Self-employed, total (% of total employment) (modeled ILO estimate) [SL.EMP.SELF.ZS]</th>
          <th>Coverage of unemployment benefits and ALMP (% of population) [per_lm_alllm.cov_pop_tot]</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>379</th>
          <td>1995</td>
          <td>YR1995</td>
          <td>Kuwait</td>
          <td>KWT</td>
          <td>14.461</td>
          <td>69.691</td>
          <td>56.705</td>
          <td>..</td>
          <td>..</td>
          <td>0.561</td>
          <td>2.072</td>
          <td>23.105</td>
          <td>74.823</td>
          <td>..</td>
          <td>0.705</td>
          <td>2.630</td>
          <td>..</td>
        </tr>
        <tr>
          <th>5476</th>
          <td>2014</td>
          <td>YR2014</td>
          <td>Timor-Leste</td>
          <td>TLS</td>
          <td>9.502</td>
          <td>39.648</td>
          <td>47.564</td>
          <td>..</td>
          <td>..</td>
          <td>1.641</td>
          <td>50.888</td>
          <td>9.241</td>
          <td>39.871</td>
          <td>..</td>
          <td>3.288</td>
          <td>73.246</td>
          <td>..</td>
        </tr>
        <tr>
          <th>4888</th>
          <td>2012</td>
          <td>YR2012</td>
          <td>Micronesia, Fed. Sts.</td>
          <td>FSM</td>
          <td>..</td>
          <td>..</td>
          <td>..</td>
          <td>..</td>
          <td>..</td>
          <td>..</td>
          <td>..</td>
          <td>..</td>
          <td>..</td>
          <td>..</td>
          <td>..</td>
          <td>..</td>
          <td>..</td>
        </tr>
        <tr>
          <th>694</th>
          <td>1996</td>
          <td>YR1996</td>
          <td>Qatar</td>
          <td>QAT</td>
          <td>29.455</td>
          <td>79.774</td>
          <td>46.803</td>
          <td>..</td>
          <td>..</td>
          <td>0.566</td>
          <td>3.757</td>
          <td>33.204</td>
          <td>63.040</td>
          <td>..</td>
          <td>1.632</td>
          <td>1.301</td>
          <td>..</td>
        </tr>
        <tr>
          <th>491</th>
          <td>1995</td>
          <td>YR1995</td>
          <td>Europe &amp; Central Asia (IDA &amp; IBRD countries)</td>
          <td>TEC</td>
          <td>40.795</td>
          <td>60.189</td>
          <td>72.987</td>
          <td>..</td>
          <td>..</td>
          <td>1.849</td>
          <td>26.032</td>
          <td>29.018</td>
          <td>44.950</td>
          <td>..</td>
          <td>9.504</td>
          <td>23.589</td>
          <td>..</td>
        </tr>
      </tbody>
    </table>
    </div>



Standardize Country Codes
-------------------------

.. code:: ipython3

    """ Only Select rows with valid country codes
    """
    country_locations = []
    for country in df['Country Code']:
        try:
            pycountry.countries.lookup(country)
            country_locations.append(True)
        except LookupError:
            country_locations.append(False)
    df = df[country_locations]

Standardize Indexes
-------------------

.. code:: ipython3

    df.rename(
        {
            "Time": "Year"
        },
        axis='columns',
        inplace=True)

.. code:: ipython3

    df.set_index(["Country Code", "Year"], inplace=True)

Clean Data
----------

Header
~~~~~~

.. code:: ipython3

    df.drop(["Time Code", "Country Name"],
            axis='columns',
            inplace=True)

.. code:: ipython3

    c = [ re.search(r"\[(\w+\.)+\w+\]",d)[0].replace("[","").replace("]","") for d in df.columns ]

.. code:: ipython3

    c_names = {}
    for x in range(len(c)):
        c_names[df.columns[x]] = c[x]

.. code:: ipython3

    df.rename(c_names,axis='columns',inplace=True)

Data Types
~~~~~~~~~~

.. code:: ipython3

    """ Replace '..' with np.nan for better parsing
    """
    df = df.replace('..', np.NaN)

.. code:: ipython3

    df = df.astype(float)

.. code:: ipython3

    df.sample(5)




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th></th>
          <th>SL.TLF.ACTI.1524.FE.ZS</th>
          <th>SL.TLF.CACT.ZS</th>
          <th>SL.TLF.CACT.FM.ZS</th>
          <th>SL.TLF.0714.SW.TM</th>
          <th>SL.TLF.0714.WK.TM</th>
          <th>SL.EMP.MPYR.ZS</th>
          <th>SL.AGR.EMPL.ZS</th>
          <th>SL.IND.EMPL.ZS</th>
          <th>SL.SRV.EMPL.ZS</th>
          <th>SL.ISV.IFRM.ZS</th>
          <th>SL.UEM.TOTL.ZS</th>
          <th>SL.EMP.SELF.ZS</th>
          <th>per_lm_alllm.cov_pop_tot</th>
        </tr>
        <tr>
          <th>Country Code</th>
          <th>Year</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>CAF</th>
          <th>2007</th>
          <td>51.486</td>
          <td>72.554</td>
          <td>82.420</td>
          <td>nan</td>
          <td>nan</td>
          <td>0.898</td>
          <td>70.528</td>
          <td>10.761</td>
          <td>18.711</td>
          <td>nan</td>
          <td>6.606</td>
          <td>94.512</td>
          <td>nan</td>
        </tr>
        <tr>
          <th>BLR</th>
          <th>1994</th>
          <td>43.177</td>
          <td>59.122</td>
          <td>78.588</td>
          <td>nan</td>
          <td>nan</td>
          <td>0.708</td>
          <td>11.975</td>
          <td>31.472</td>
          <td>56.553</td>
          <td>nan</td>
          <td>12.800</td>
          <td>4.286</td>
          <td>nan</td>
        </tr>
        <tr>
          <th>GIN</th>
          <th>2002</th>
          <td>52.383</td>
          <td>65.242</td>
          <td>92.519</td>
          <td>nan</td>
          <td>nan</td>
          <td>1.542</td>
          <td>70.450</td>
          <td>5.501</td>
          <td>24.048</td>
          <td>nan</td>
          <td>4.549</td>
          <td>92.868</td>
          <td>nan</td>
        </tr>
        <tr>
          <th>SXM</th>
          <th>2013</th>
          <td>nan</td>
          <td>nan</td>
          <td>nan</td>
          <td>nan</td>
          <td>nan</td>
          <td>nan</td>
          <td>nan</td>
          <td>nan</td>
          <td>nan</td>
          <td>nan</td>
          <td>nan</td>
          <td>nan</td>
          <td>nan</td>
        </tr>
        <tr>
          <th>LBN</th>
          <th>2017</th>
          <td>17.853</td>
          <td>47.194</td>
          <td>33.047</td>
          <td>nan</td>
          <td>nan</td>
          <td>9.364</td>
          <td>12.241</td>
          <td>22.335</td>
          <td>65.425</td>
          <td>nan</td>
          <td>6.114</td>
          <td>37.032</td>
          <td>nan</td>
        </tr>
      </tbody>
    </table>
    </div>



Save Data
---------

.. code:: ipython3

    df.to_pickle("../data/processed/Labor_WDI.pickle")
