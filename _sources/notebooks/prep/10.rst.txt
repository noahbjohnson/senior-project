
Labor Data Processing (WDI/ILO)
===============================

Data Dictionary
---------------

+--------------------------------+-------------------------------------------------------------------------------------------------+
| **Code**                       | **Indicator Name**                                                                              |
+================================+=================================================================================================+
| SL.TLF.ACTI.1524.FE.ZS         | Labor force participation rate for ages 15-24, female (%) (modeled ILO estimate)                |
+--------------------------------+-------------------------------------------------------------------------------------------------+
| SL.TLF.CACT.ZS                 | Labor force participation rate, total (% of total population ages 15+) (modeled ILO estimate)   |
+--------------------------------+-------------------------------------------------------------------------------------------------+
| SL.TLF.CACT.FM.ZS              | Ratio of female to male labor force participation rate (%) (modeled ILO estimate)               |
+--------------------------------+-------------------------------------------------------------------------------------------------+
| SL.TLF.0714.SW.TM              | Average working hours of children, study and work, ages 7-14 (hours per week)                   |
+--------------------------------+-------------------------------------------------------------------------------------------------+
| SL.TLF.0714.WK.TM              | Average working hours of children, working only, ages 7-14 (hours per week)                     |
+--------------------------------+-------------------------------------------------------------------------------------------------+
| SL.EMP.MPYR.ZS                 | Employers, total (% of total employment) (modeled ILO estimate)                                 |
+--------------------------------+-------------------------------------------------------------------------------------------------+
| SL.AGR.EMPL.ZS                 | Employment in agriculture (% of total employment) (modeled ILO estimate)                        |
+--------------------------------+-------------------------------------------------------------------------------------------------+
| SL.IND.EMPL.ZS                 | Employment in industry (% of total employment) (modeled ILO estimate)                           |
+--------------------------------+-------------------------------------------------------------------------------------------------+
| SL.SRV.EMPL.ZS                 | Employment in services (% of total employment) (modeled ILO estimate)                           |
+--------------------------------+-------------------------------------------------------------------------------------------------+
| SL.ISV.IFRM.ZS                 | Informal employment (% of total non-agricultural employment)                                    |
+--------------------------------+-------------------------------------------------------------------------------------------------+
| SL.UEM.TOTL.ZS                 | Unemployment, total (% of total labor force) (modeled ILO estimate)                             |
+--------------------------------+-------------------------------------------------------------------------------------------------+
| SL.EMP.SELF.ZS                 | Self-employed, total (% of total employment) (modeled ILO estimate)                             |
+--------------------------------+-------------------------------------------------------------------------------------------------+
| per\_lm\_alllm.cov\_pop\_tot   | Coverage of unemployment benefits and ALMP (% of population)                                    |
+--------------------------------+-------------------------------------------------------------------------------------------------+

.. code:: ipython3

    import re
    
    import numpy as np
    import pandas as pd
    import pycountry
    
    %matplotlib inline
    
    pd.set_option('display.float_format', lambda x: '%.3f' % x)

Load The File
-------------

.. code:: ipython3

    df = pd.read_excel("../data/external/Labor/WDI/Data_Extract_From_World_Development_Indicators.xlsx")

.. code:: ipython3

    df.sample(5)




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>Time</th>
          <th>Time Code</th>
          <th>Country Name</th>
          <th>Country Code</th>
          <th>Labor force participation rate for ages 15-24, female (%) (modeled ILO estimate) [SL.TLF.ACTI.1524.FE.ZS]</th>
          <th>Labor force participation rate, total (% of total population ages 15+) (modeled ILO estimate) [SL.TLF.CACT.ZS]</th>
          <th>Ratio of female to male labor force participation rate (%) (modeled ILO estimate) [SL.TLF.CACT.FM.ZS]</th>
          <th>Average working hours of children, study and work, ages 7-14 (hours per week) [SL.TLF.0714.SW.TM]</th>
          <th>Average working hours of children, working only, ages 7-14 (hours per week) [SL.TLF.0714.WK.TM]</th>
          <th>Employers, total (% of total employment) (modeled ILO estimate) [SL.EMP.MPYR.ZS]</th>
          <th>Employment in agriculture (% of total employment) (modeled ILO estimate) [SL.AGR.EMPL.ZS]</th>
          <th>Employment in industry (% of total employment) (modeled ILO estimate) [SL.IND.EMPL.ZS]</th>
          <th>Employment in services (% of total employment) (modeled ILO estimate) [SL.SRV.EMPL.ZS]</th>
          <th>Informal employment (% of total non-agricultural employment) [SL.ISV.IFRM.ZS]</th>
          <th>Unemployment, total (% of total labor force) (modeled ILO estimate) [SL.UEM.TOTL.ZS]</th>
          <th>Self-employed, total (% of total employment) (modeled ILO estimate) [SL.EMP.SELF.ZS]</th>
          <th>Coverage of unemployment benefits and ALMP (% of population) [per_lm_alllm.cov_pop_tot]</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>1965</th>
          <td>2001</td>
          <td>YR2001</td>
          <td>Lao PDR</td>
          <td>LAO</td>
          <td>76.085</td>
          <td>79.852</td>
          <td>97.474</td>
          <td>..</td>
          <td>..</td>
          <td>0.326</td>
          <td>81.193</td>
          <td>4.872</td>
          <td>13.934</td>
          <td>..</td>
          <td>1.863</td>
          <td>88.291</td>
          <td>..</td>
        </tr>
        <tr>
          <th>3699</th>
          <td>2008</td>
          <td>YR2008</td>
          <td>China</td>
          <td>CHN</td>
          <td>55.154</td>
          <td>71.880</td>
          <td>82.643</td>
          <td>..</td>
          <td>..</td>
          <td>2.845</td>
          <td>39.600</td>
          <td>26.875</td>
          <td>33.525</td>
          <td>..</td>
          <td>4.600</td>
          <td>53.580</td>
          <td>..</td>
        </tr>
        <tr>
          <th>347</th>
          <td>1995</td>
          <td>YR1995</td>
          <td>Finland</td>
          <td>FIN</td>
          <td>48.039</td>
          <td>59.833</td>
          <td>83.844</td>
          <td>..</td>
          <td>..</td>
          <td>3.680</td>
          <td>7.758</td>
          <td>27.597</td>
          <td>64.645</td>
          <td>..</td>
          <td>17.005</td>
          <td>16.301</td>
          <td>..</td>
        </tr>
        <tr>
          <th>1393</th>
          <td>1999</td>
          <td>YR1999</td>
          <td>Ecuador</td>
          <td>ECU</td>
          <td>41.888</td>
          <td>67.830</td>
          <td>62.044</td>
          <td>..</td>
          <td>..</td>
          <td>7.023</td>
          <td>30.114</td>
          <td>20.157</td>
          <td>49.729</td>
          <td>..</td>
          <td>5.006</td>
          <td>47.256</td>
          <td>..</td>
        </tr>
        <tr>
          <th>4760</th>
          <td>2012</td>
          <td>YR2012</td>
          <td>Italy</td>
          <td>ITA</td>
          <td>23.710</td>
          <td>48.718</td>
          <td>66.365</td>
          <td>..</td>
          <td>..</td>
          <td>6.619</td>
          <td>3.693</td>
          <td>27.583</td>
          <td>68.724</td>
          <td>..</td>
          <td>10.655</td>
          <td>24.908</td>
          <td>..</td>
        </tr>
      </tbody>
    </table>
    </div>



Standardize Country Codes
-------------------------

.. code:: ipython3

    """ Only Select rows with valid country codes
    """
    country_locations = []
    for country in df['Country Code']:
        try:
            pycountry.countries.lookup(country)
            country_locations.append(True)
        except LookupError:
            country_locations.append(False)
    df = df[country_locations]

Standardize Indexes
-------------------

.. code:: ipython3

    df.rename(
        {
            "Time": "Year"
        },
        axis='columns',
        inplace=True)

.. code:: ipython3

    df.set_index(["Country Code", "Year"], inplace=True)

Clean Data
----------

Header
~~~~~~

.. code:: ipython3

    df.drop(["Time Code", "Country Name"],
            axis='columns',
            inplace=True)

.. code:: ipython3

    c = [ re.search(r"\[(\w+\.)+\w+\]",d)[0].replace("[","").replace("]","") for d in df.columns ]

.. code:: ipython3

    c_names = {}
    for x in range(len(c)):
        c_names[df.columns[x]] = c[x]

.. code:: ipython3

    df.rename(c_names,axis='columns',inplace=True)

Data Types
~~~~~~~~~~

.. code:: ipython3

    """ Replace '..' with np.nan for better parsing
    """
    df = df.replace('..', np.NaN)

.. code:: ipython3

    df = df.astype(float)

.. code:: ipython3

    df.sample(5)




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th></th>
          <th>SL.TLF.ACTI.1524.FE.ZS</th>
          <th>SL.TLF.CACT.ZS</th>
          <th>SL.TLF.CACT.FM.ZS</th>
          <th>SL.TLF.0714.SW.TM</th>
          <th>SL.TLF.0714.WK.TM</th>
          <th>SL.EMP.MPYR.ZS</th>
          <th>SL.AGR.EMPL.ZS</th>
          <th>SL.IND.EMPL.ZS</th>
          <th>SL.SRV.EMPL.ZS</th>
          <th>SL.ISV.IFRM.ZS</th>
          <th>SL.UEM.TOTL.ZS</th>
          <th>SL.EMP.SELF.ZS</th>
          <th>per_lm_alllm.cov_pop_tot</th>
        </tr>
        <tr>
          <th>Country Code</th>
          <th>Year</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>GTM</th>
          <th>2015</th>
          <td>31.401</td>
          <td>61.427</td>
          <td>45.696</td>
          <td>18.550</td>
          <td>34.446</td>
          <td>2.747</td>
          <td>31.876</td>
          <td>18.895</td>
          <td>49.230</td>
          <td>72.550</td>
          <td>2.506</td>
          <td>39.678</td>
          <td>nan</td>
        </tr>
        <tr>
          <th>MLT</th>
          <th>2010</th>
          <td>48.634</td>
          <td>50.089</td>
          <td>51.314</td>
          <td>nan</td>
          <td>nan</td>
          <td>4.475</td>
          <td>1.337</td>
          <td>25.517</td>
          <td>73.146</td>
          <td>nan</td>
          <td>6.847</td>
          <td>14.404</td>
          <td>nan</td>
        </tr>
        <tr>
          <th>BIH</th>
          <th>2014</th>
          <td>24.551</td>
          <td>46.951</td>
          <td>61.455</td>
          <td>nan</td>
          <td>nan</td>
          <td>4.579</td>
          <td>17.078</td>
          <td>30.007</td>
          <td>52.915</td>
          <td>17.110</td>
          <td>27.517</td>
          <td>23.045</td>
          <td>nan</td>
        </tr>
        <tr>
          <th>BLZ</th>
          <th>2008</th>
          <td>40.393</td>
          <td>66.019</td>
          <td>60.021</td>
          <td>nan</td>
          <td>nan</td>
          <td>6.510</td>
          <td>18.771</td>
          <td>17.562</td>
          <td>63.667</td>
          <td>nan</td>
          <td>8.180</td>
          <td>30.524</td>
          <td>nan</td>
        </tr>
        <tr>
          <th>MMR</th>
          <th>2011</th>
          <td>57.467</td>
          <td>67.142</td>
          <td>64.875</td>
          <td>nan</td>
          <td>nan</td>
          <td>3.643</td>
          <td>53.835</td>
          <td>15.831</td>
          <td>30.334</td>
          <td>nan</td>
          <td>0.895</td>
          <td>63.902</td>
          <td>nan</td>
        </tr>
      </tbody>
    </table>
    </div>



Save Data
---------

.. code:: ipython3

    df.to_pickle("../data/processed/Labor_WDI.pickle")
