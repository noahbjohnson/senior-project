
Labor Data Processing (WDI/ILO)
===============================

Data Dictionary
---------------

+--------------------------------+-------------------------------------------------------------------------------------------------+
| **Code**                       | **Indicator Name**                                                                              |
+================================+=================================================================================================+
| SL.TLF.ACTI.1524.FE.ZS         | Labor force participation rate for ages 15-24, female (%) (modeled ILO estimate)                |
+--------------------------------+-------------------------------------------------------------------------------------------------+
| SL.TLF.CACT.ZS                 | Labor force participation rate, total (% of total population ages 15+) (modeled ILO estimate)   |
+--------------------------------+-------------------------------------------------------------------------------------------------+
| SL.TLF.CACT.FM.ZS              | Ratio of female to male labor force participation rate (%) (modeled ILO estimate)               |
+--------------------------------+-------------------------------------------------------------------------------------------------+
| SL.TLF.0714.SW.TM              | Average working hours of children, study and work, ages 7-14 (hours per week)                   |
+--------------------------------+-------------------------------------------------------------------------------------------------+
| SL.TLF.0714.WK.TM              | Average working hours of children, working only, ages 7-14 (hours per week)                     |
+--------------------------------+-------------------------------------------------------------------------------------------------+
| SL.EMP.MPYR.ZS                 | Employers, total (% of total employment) (modeled ILO estimate)                                 |
+--------------------------------+-------------------------------------------------------------------------------------------------+
| SL.AGR.EMPL.ZS                 | Employment in agriculture (% of total employment) (modeled ILO estimate)                        |
+--------------------------------+-------------------------------------------------------------------------------------------------+
| SL.IND.EMPL.ZS                 | Employment in industry (% of total employment) (modeled ILO estimate)                           |
+--------------------------------+-------------------------------------------------------------------------------------------------+
| SL.SRV.EMPL.ZS                 | Employment in services (% of total employment) (modeled ILO estimate)                           |
+--------------------------------+-------------------------------------------------------------------------------------------------+
| SL.ISV.IFRM.ZS                 | Informal employment (% of total non-agricultural employment)                                    |
+--------------------------------+-------------------------------------------------------------------------------------------------+
| SL.UEM.TOTL.ZS                 | Unemployment, total (% of total labor force) (modeled ILO estimate)                             |
+--------------------------------+-------------------------------------------------------------------------------------------------+
| SL.EMP.SELF.ZS                 | Self-employed, total (% of total employment) (modeled ILO estimate)                             |
+--------------------------------+-------------------------------------------------------------------------------------------------+
| per\_lm\_alllm.cov\_pop\_tot   | Coverage of unemployment benefits and ALMP (% of population)                                    |
+--------------------------------+-------------------------------------------------------------------------------------------------+

.. code:: ipython3

    import re
    
    import numpy as np
    import pandas as pd
    import pycountry
    
    %matplotlib inline
    
    pd.set_option('display.float_format', lambda x: '%.3f' % x)

Load The File
-------------

.. code:: ipython3

    df = pd.read_excel("../data/external/Labor/WDI/Data_Extract_From_World_Development_Indicators.xlsx")

.. code:: ipython3

    df.sample(5)




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>Time</th>
          <th>Time Code</th>
          <th>Country Name</th>
          <th>Country Code</th>
          <th>Labor force participation rate for ages 15-24, female (%) (modeled ILO estimate) [SL.TLF.ACTI.1524.FE.ZS]</th>
          <th>Labor force participation rate, total (% of total population ages 15+) (modeled ILO estimate) [SL.TLF.CACT.ZS]</th>
          <th>Ratio of female to male labor force participation rate (%) (modeled ILO estimate) [SL.TLF.CACT.FM.ZS]</th>
          <th>Average working hours of children, study and work, ages 7-14 (hours per week) [SL.TLF.0714.SW.TM]</th>
          <th>Average working hours of children, working only, ages 7-14 (hours per week) [SL.TLF.0714.WK.TM]</th>
          <th>Employers, total (% of total employment) (modeled ILO estimate) [SL.EMP.MPYR.ZS]</th>
          <th>Employment in agriculture (% of total employment) (modeled ILO estimate) [SL.AGR.EMPL.ZS]</th>
          <th>Employment in industry (% of total employment) (modeled ILO estimate) [SL.IND.EMPL.ZS]</th>
          <th>Employment in services (% of total employment) (modeled ILO estimate) [SL.SRV.EMPL.ZS]</th>
          <th>Informal employment (% of total non-agricultural employment) [SL.ISV.IFRM.ZS]</th>
          <th>Unemployment, total (% of total labor force) (modeled ILO estimate) [SL.UEM.TOTL.ZS]</th>
          <th>Self-employed, total (% of total employment) (modeled ILO estimate) [SL.EMP.SELF.ZS]</th>
          <th>Coverage of unemployment benefits and ALMP (% of population) [per_lm_alllm.cov_pop_tot]</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>240</th>
          <td>1994</td>
          <td>YR1994</td>
          <td>Latin America &amp; the Caribbean (IDA &amp; IBRD coun...</td>
          <td>TLA</td>
          <td>40.951</td>
          <td>62.667</td>
          <td>55.186</td>
          <td>..</td>
          <td>..</td>
          <td>4.500</td>
          <td>22.654</td>
          <td>22.030</td>
          <td>55.316</td>
          <td>..</td>
          <td>6.485</td>
          <td>42.255</td>
          <td>..</td>
        </tr>
        <tr>
          <th>1756</th>
          <td>2000</td>
          <td>YR2000</td>
          <td>Senegal</td>
          <td>SEN</td>
          <td>26.297</td>
          <td>51.154</td>
          <td>46.226</td>
          <td>..</td>
          <td>..</td>
          <td>0.683</td>
          <td>48.771</td>
          <td>12.846</td>
          <td>38.383</td>
          <td>..</td>
          <td>5.603</td>
          <td>79.414</td>
          <td>..</td>
        </tr>
        <tr>
          <th>5107</th>
          <td>2013</td>
          <td>YR2013</td>
          <td>Greenland</td>
          <td>GRL</td>
          <td>..</td>
          <td>..</td>
          <td>..</td>
          <td>..</td>
          <td>..</td>
          <td>..</td>
          <td>..</td>
          <td>..</td>
          <td>..</td>
          <td>..</td>
          <td>..</td>
          <td>..</td>
          <td>..</td>
        </tr>
        <tr>
          <th>2758</th>
          <td>2004</td>
          <td>YR2004</td>
          <td>Latvia</td>
          <td>LVA</td>
          <td>30.831</td>
          <td>57.253</td>
          <td>76.862</td>
          <td>..</td>
          <td>..</td>
          <td>3.144</td>
          <td>13.301</td>
          <td>26.941</td>
          <td>59.758</td>
          <td>..</td>
          <td>11.708</td>
          <td>13.510</td>
          <td>..</td>
        </tr>
        <tr>
          <th>509</th>
          <td>1995</td>
          <td>YR1995</td>
          <td>Middle East &amp; North Africa</td>
          <td>MEA</td>
          <td>16.605</td>
          <td>47.465</td>
          <td>24.448</td>
          <td>..</td>
          <td>..</td>
          <td>6.859</td>
          <td>26.580</td>
          <td>24.924</td>
          <td>48.496</td>
          <td>..</td>
          <td>12.318</td>
          <td>37.997</td>
          <td>..</td>
        </tr>
      </tbody>
    </table>
    </div>



Standardize Country Codes
-------------------------

.. code:: ipython3

    """ Only Select rows with valid country codes
    """
    country_locations = []
    for country in df['Country Code']:
        try:
            pycountry.countries.lookup(country)
            country_locations.append(True)
        except LookupError:
            country_locations.append(False)
    df = df[country_locations]

Standardize Indexes
-------------------

.. code:: ipython3

    df.rename(
        {
            "Time": "Year"
        },
        axis='columns',
        inplace=True)

.. code:: ipython3

    df.set_index(["Country Code", "Year"], inplace=True)

Clean Data
----------

Header
~~~~~~

.. code:: ipython3

    df.drop(["Time Code", "Country Name"],
            axis='columns',
            inplace=True)

.. code:: ipython3

    c = [ re.search(r"\[(\w+\.)+\w+\]",d)[0].replace("[","").replace("]","") for d in df.columns ]

.. code:: ipython3

    c_names = {}
    for x in range(len(c)):
        c_names[df.columns[x]] = c[x]

.. code:: ipython3

    df.rename(c_names,axis='columns',inplace=True)

Data Types
~~~~~~~~~~

.. code:: ipython3

    """ Replace '..' with np.nan for better parsing
    """
    df = df.replace('..', np.NaN)

.. code:: ipython3

    df = df.astype(float)

.. code:: ipython3

    df.sample(5)




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th></th>
          <th>SL.TLF.ACTI.1524.FE.ZS</th>
          <th>SL.TLF.CACT.ZS</th>
          <th>SL.TLF.CACT.FM.ZS</th>
          <th>SL.TLF.0714.SW.TM</th>
          <th>SL.TLF.0714.WK.TM</th>
          <th>SL.EMP.MPYR.ZS</th>
          <th>SL.AGR.EMPL.ZS</th>
          <th>SL.IND.EMPL.ZS</th>
          <th>SL.SRV.EMPL.ZS</th>
          <th>SL.ISV.IFRM.ZS</th>
          <th>SL.UEM.TOTL.ZS</th>
          <th>SL.EMP.SELF.ZS</th>
          <th>per_lm_alllm.cov_pop_tot</th>
        </tr>
        <tr>
          <th>Country Code</th>
          <th>Year</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>GEO</th>
          <th>2001</th>
          <td>27.091</td>
          <td>65.846</td>
          <td>76.293</td>
          <td>nan</td>
          <td>nan</td>
          <td>1.536</td>
          <td>52.792</td>
          <td>9.277</td>
          <td>37.930</td>
          <td>nan</td>
          <td>11.160</td>
          <td>64.112</td>
          <td>nan</td>
        </tr>
        <tr>
          <th>BMU</th>
          <th>2007</th>
          <td>nan</td>
          <td>nan</td>
          <td>nan</td>
          <td>nan</td>
          <td>nan</td>
          <td>nan</td>
          <td>nan</td>
          <td>nan</td>
          <td>nan</td>
          <td>nan</td>
          <td>nan</td>
          <td>nan</td>
          <td>nan</td>
        </tr>
        <tr>
          <th>UGA</th>
          <th>2008</th>
          <td>52.445</td>
          <td>70.665</td>
          <td>86.125</td>
          <td>nan</td>
          <td>nan</td>
          <td>1.173</td>
          <td>72.811</td>
          <td>7.369</td>
          <td>19.820</td>
          <td>nan</td>
          <td>2.662</td>
          <td>82.004</td>
          <td>nan</td>
        </tr>
        <tr>
          <th>USA</th>
          <th>2002</th>
          <td>57.454</td>
          <td>65.714</td>
          <td>80.051</td>
          <td>nan</td>
          <td>nan</td>
          <td>2.975</td>
          <td>1.544</td>
          <td>22.743</td>
          <td>75.713</td>
          <td>nan</td>
          <td>5.783</td>
          <td>7.361</td>
          <td>nan</td>
        </tr>
        <tr>
          <th>TKM</th>
          <th>2018</th>
          <td>35.745</td>
          <td>65.142</td>
          <td>67.496</td>
          <td>nan</td>
          <td>nan</td>
          <td>1.899</td>
          <td>22.776</td>
          <td>33.706</td>
          <td>43.518</td>
          <td>nan</td>
          <td>3.783</td>
          <td>25.460</td>
          <td>nan</td>
        </tr>
      </tbody>
    </table>
    </div>



Save Data
---------

.. code:: ipython3

    df.to_pickle("../data/processed/Labor_WDI.pickle")
